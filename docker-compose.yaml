version: '3.8'

services:
  nest:
    image: node:18-alpine
    container_name: nest
    working_dir: /nest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=${NODE_ENV}
    volumes:
      - ./src:/nest/src
      - ./.env:/nest/.env
    ports:
      - 3000:3000
    env_file:
      - .env
    restart: always
    networks:
      server-network:
        ipv4_address: 172.20.0.20 # custom ip address
    depends_on:
      - 'mysql'
      - 'postgresql'
      - 'mongodb'

  mysql:
    image: mysql:8.0
    container_name: mysql
    volumes:
      # 실제 물리 경로와 컨테이너 경로를 연동
      - ./db/mysql/mysql-data:/var/lib/mysql
      # 초기 데이터를 넣기 위한 sql 파일을 연동
      - ./db/mysql/conf:/etc/mysql/conf.d
    environment:
      MYSQL_DATABASE: ${MYSQL_DB_HOST}
      MYSQL_USER: ${MYSQL_DB_USER}
      MYSQL_PASSWORD: ${MYSQL_DB_PASSWD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_DB_ROOT_PASSWD}
      TZ: Asia/Seoul
    restart: always
    networks:
      server-network:
        ipv4_address: 172.20.0.10 # custom ip address
    ports:
      - 3306:3306
    command:
      # utf8mb4 설정
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci

  postgresql:
    image: postgres:15.1
    container_name: postgresql
    volumes:
      - ./db/postgresql/data:/var/lib/postgresql/data
      - ./db/postgresql/data:/etc/postgresql/postgresql.conf
    environment:
      POSTGRES_DB: ${PG_DB_NAME}
      POSTGRES_USER: ${PG_DB_USER}
      POSTGRES_PASSWORD: ${PG_DB_PASSWD}
      TZ: Asia/Seoul
    restart: always
    networks:
      server-network:
        ipv4_address: 172.20.0.30 # custom ip address
    ports:
      - 5432:5432

  mongodb:
    image: mongo:6
    container_name: mongodb
    volumes:
      - ./db/mongodb/data:/data/configdb
      - ./db/mongodb/data:/data/db
    environment:
      TZ: Asia/Seoul
    restart: always
    networks:
      server-network:
        ipv4_address: 172.20.0.40 # custom ip address
    ports:
      - 27017:27017
    command: [--auth]

networks:
  server-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 # 서브넷 설정

volumes:
  mysql-data:
  mongo-data:
